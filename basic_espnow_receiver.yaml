substitutions:
  my_espnow_app: "0x5353"
  log_level: INFO

globals:
  - id: keeper
    type: uint64_t
    initial_value: "0xE86BEA23CD98"
    restore_value: yes

esphome:
  name: syncswitch-receiver
  on_boot:
    priority: -100
    then:
      - lambda: |-
          id(basic_espnow_id).on_message([](const std::string &msg, const std::array<uint8_t, 6> &mac){
            ESP_LOGI("basic_espnow", "Received: %s from %02X:%02X:%02X:%02X:%02X:%02X",
              msg.c_str(), mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]);
          });

esp32:
  board: esp32doit-devkit-v1
  framework:
    type: arduino

# Enable logging
logger:
  level: ${log_level}

# Enable Home Assistant API
api:

ota:
  - platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Syncswitch F Fallback Hotspot"
    password: "FOLCFA0PFjrP"

external_components:
  - source:
      type: local
      path: components
    components: [basic_espnow]

# external_components:
#   - source: github://AminKAli/espnow_proxy
#     components: [espnow_proxy]

basic_espnow:
  id: basic_espnow_id
