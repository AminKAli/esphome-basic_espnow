substitutions:
  my_espnow_app: "0x5354"
  log_level: INFO

globals:
  - id: message_counter
    type: unsigned long
    restore_value: no
    initial_value: '0'

esphome:
  name: syncswitch-transmitter

esp32:
  board: adafruit_feather_esp32s3
  variant: esp32s3
  framework:
    type: esp-idf

# Enable logging
logger:
  level: ${log_level}
  
# Enable Home Assistant API
api:

ota:
  - platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Syncswitch T Fallback Hotspot"
    password: "FOLCFA0PFjrP"

external_components:
  - source:
      type: local
      path: components
    components: [basic_espnow]

# external_components:
#   - source: github://AminKAli/espnow_proxy
#     components: [espnow_proxy]

basic_espnow:
  id: basic_espnow_id
  peers:
    - "CC:8D:A2:50:DB:F8"



interval:
  - interval: 1sec
    then:
      - lambda: |-
            std::array<uint8_t, 6> peer_mac = {0xCC, 0x8D, 0xA2, 0x50, 0xDB, 0xF8};
            std::string msg = "Hello peer("+std::to_string(id(message_counter))+")";
            id(basic_espnow_id).send_message(msg, peer_mac);
            ESP_LOGI("basic_espnow", "Sending message(%lu)", id(message_counter));
            id(message_counter)++;